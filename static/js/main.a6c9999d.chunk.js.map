{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","CardList","robots","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAiBeA,EAfF,SAACC,GACV,OACI,yBAAKC,UAAU,uDACX,yBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,YAA6CC,IAAI,UACzD,6BACI,4BACKJ,EAAMK,MAEX,2BACKL,EAAMM,UCQZC,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,6BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAS,kBAAC,EAAD,CACLC,IAAKD,EACLR,GAAIK,EAAOG,GAAGR,GACdE,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,aCE1BO,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,yBAAKb,UAAU,OACX,2BACAA,UAAU,oCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCAPI,EAPA,SAAClB,GACZ,OACI,yBAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEtB,EAAMuB,WCaJC,E,kDAhBX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHC,E,qDAMnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE7B,WACI,OAAIG,KAAKJ,MAAMC,SACL,wDAEHG,KAAK7B,MAAMuB,a,GAdCQ,aCyCZC,G,wDAnCX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAZzC,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OACfG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKZ,SAAS,CAACtB,OAAQkC,S,oBAM/C,WACI,MAA8Bb,KAAKJ,MAA5BjB,EAAP,EAAOA,OAAQ2B,EAAf,EAAeA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQtC,EAAOwC,OAGX,yBAAK/C,UAAU,MACX,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWa,aAAce,KAAKI,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUzB,OAAQmC,OAP9B,2C,GAvBMZ,cCMHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a6c9999d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = (props) => {\n    return(\n        <div className=\"bg-light-green tc dib br3 pa3 ma2 grow bw2 shadow-s\">\n            <img src={`https://robohash.org/${props.id}?200x200`}alt=\"robot\"/>\n            <div>\n                <h2>\n                    {props.name}\n                </h2>\n                <p>\n                    {props.email}\n                </p>\n            </div>\n        </div>\n    )\n}\nexport default Card;","import React from \"react\";\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return ( <Card \n                        key={i} \n                        id={robots[i].id} \n                        name={robots[i].name} \n                        email={robots[i].email} />\n                    );\n                })\n            }\n        </div>\n    )\n}\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className=\"pa2\">\n            <input \n            className=\"pa3 ba  b--green bg-lightest-blue\"\n            type=\"search\" \n            placeholder=\"search robots\"\n            onChange={searchChange} \n            />\n        </div>\n    )\n}\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    );\n}\nexport default Scroll;","import React,{Component} from \"react\";\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n    render() {\n        if (this.state.hasError) {\n            return<h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\nexport default ErrorBoundry;","import React, {Component} from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport './App.css';\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n    componentDidMount(){\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(users => {this.setState({robots: users})\n            });\n    }\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value});\n    }\n    render () {\n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        return !robots.length?\n            <h1>Loading</h1> :\n        (\n            <div className=\"tc\">\n                <h1 className=\"f1\">RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        )}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}